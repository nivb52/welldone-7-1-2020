{"version":3,"sources":["cmps/crud/Toolbar.jsx","cmps/common/List.jsx","cmps/common/Input.jsx","cmps/map/index.jsx","cmps/crud/index.jsx","services/UtilServices.js","services/CatService.js","views/Categories.jsx","services/LocService.js","cmps/common/Select.jsx","views/Locations.jsx","cmps/ToogleBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Toolbar","children","id","back","view","edit","onEdit","del","add","handleClick","type","className","onClick","List","list","parentClass","nameClass","classCondition","itemClass","map","item","key","_id","name","Input","label","objectKey","placeholder","onEnter","handleInput","handleBlur","classInput","defaultValue","useState","userInput","setUserInput","isValid","setIsValide","onKeyDown","e","keyCode","onChange","value","target","trim","onBlur","TOKEN","require","mapbox","geolocateStyle","float","margin","padding","Map","coords","editCoords","isEditable","longitude","latitude","width","height","zoom","viewport","setViewPort","style","display","justifyContent","mapboxApiAccessToken","mapStyle","onViewportChange","transitionDuration","offsetLeft","offsetTop","positionOptions","enableHighAccuracy","trackUserLocation","Cards","cards","deleteCard","editOrAddCards","title","inputs","editInputs","doOnSelect","showMap","_findCard","found","find","c","handleSave","editCard","unSelect","setEditCard","selectCardId","setSelectCardId","viewCard","setViewCard","foundCard","console","log","field","i","makeId","length","txt","possible","charAt","Math","floor","random","db","getCat","a","async","data","_returnDB","delCat","index","findIndex","splice","editOrAdd","newCat","idx","_editCat","newId","push","_addCat","categories","Categories","onCategoryChange","cats","setCats","useEffect","getCategories","catService","editedCat","getLoc","delLoc","newLoc","_editLoc","_addLoc","sortBy","isAsec","keyType","sort","b","localeCompare","filterBy","filteredDb","filter","address","category","newDb","locations","Select","isShowAllOption","dataList","onSelect","valueKey","showKey","selectedOption","idKey","idKeyExp","optionClass","getSelectList","uniqueKey","htmlFor","Locations","isCategorryChanged","setCategories","locs","setLocs","setIsAsec","filteredBy","setFilteredBy","isEditMode","setIsEditMode","selectCategoryOption","setSelectCategoryOption","locCoords","setLocCoords","getLocations","locService","editedLoc","onEditing","ToogleBar","App","toggleCategories","setToggleCategories","setIsCategorryChanged","btnClicked","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a4bb1fe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Toolbar = ({ children, id, back, view, edit, onEdit, del, add }) => {\r\n  const handleClick = (type, id) => {\r\n    switch (type) {\r\n      case \"back\":\r\n        back();\r\n        break;\r\n      case \"view\":\r\n        view(id);\r\n        break;\r\n      case \"edit\":\r\n        edit(id);\r\n        break;\r\n      case \"del\":\r\n        del(id);\r\n        break;\r\n      case \"add\":\r\n        add();\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <h1>{children}</h1>\r\n      \r\n      {!onEdit && !id && (\r\n        <>\r\n          <button onClick={() => handleClick(\"add\")} className=\"btn\">\r\n            new\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {onEdit && !id && (\r\n        <button onClick={() => handleClick(\"back\")} className=\"btn\">\r\n          back\r\n        </button>\r\n      )}\r\n\r\n      {id && (\r\n        <div className=\"toolbar-btn\">\r\n          <button onClick={() => handleClick(\"back\")} className=\"btn\">\r\n            back\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => handleClick(\"view\", id)}\r\n            className=\"btn btn-info\"\r\n          >\r\n            view\r\n          </button>\r\n          <button\r\n            onClick={() => handleClick(\"edit\", id)}\r\n            className=\"btn btn-success\"\r\n          >\r\n            edit\r\n          </button>\r\n          <button\r\n            onClick={() => handleClick(\"del\", id)}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            delete\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nexport default function List({\r\n  list,\r\n  handleClick,\r\n  parentClass = \"card\",\r\n  nameClass = \"card-name\",\r\n  classCondition = () => {return},\r\n  itemClass = ''\r\n}) {\r\n  return (\r\n    <>\r\n      {list.map(item => (\r\n        <div\r\n          className={parentClass + \" \" + classCondition(item)}\r\n          key={item._id}\r\n          onClick={() => handleClick(item)}\r\n        >\r\n          <div className={nameClass}>\r\n            <span className={itemClass}>{item.name}</span>\r\n            {/* {item.coords && <span className={'block ' + itemClass}>{item.coords}</span>} */}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Input({\r\n  label = \"name\",\r\n  objectKey = '',\r\n  placeholder = \"enter here\",\r\n  onEnter,\r\n  handleInput,\r\n  handleBlur,\r\n  classInput = \"\",\r\n  defaultValue = \"\"\r\n}) {\r\n  const [userInput, setUserInput] = useState(defaultValue);\r\n  const [isValid, setIsValide] = useState(true);\r\n  const handleEnter = e => {\r\n    if (e.keyCode === 13) return onEnter();\r\n  };\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    if (!value || !value.trim()) return setIsValide(false);\r\n    else {\r\n      setIsValide(true);\r\n      setUserInput(value);\r\n      handleInput(key,userInput)\r\n    }\r\n  };\r\n\r\n  const key = objectKey || label\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <label className=\"block\">{label}</label>\r\n      <input\r\n        className={classInput}\r\n        onKeyDown={handleEnter}\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        onBlur={() => handleBlur(key, userInput)}\r\n      />\r\n      {isValid ? \"✅\" : \"❌\"}\r\n    </div>\r\n  );\r\n}\r\n","import \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"./mapbox.css\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport MapGL, { GeolocateControl, Marker } from \"react-map-gl\";\r\n\r\nconst token = require(\"../../secrets/api.json\");\r\n\r\nconst TOKEN = token.mapbox;\r\n\r\nconst geolocateStyle = {\r\n  //   display: isEditable ? \"block\" : \"none\",\r\n  float: \"left\",\r\n  margin: \"50px\",\r\n  padding: \"10px\"\r\n};\r\n\r\nconst Map = ({ coords, editCoords = null, isEditable = false }) => {\r\n  const longitude = coords && coords[0] ? coords[0] : 0;\r\n  const latitude = coords && coords[1] ? coords[1] : 0;\r\n\r\n  const [viewport, setViewPort] = useState({\r\n    width: \"70vw\",\r\n    height: \"60vh\",\r\n    longitude,\r\n    latitude,\r\n    zoom: 4\r\n  });\r\n\r\n  const _onViewportChange = viewport => {\r\n    if (!isEditable) return;\r\n    setViewPort({ ...viewport, transitionDuration: 3000 });\r\n    if (editCoords) editCoords(viewport);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <MapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken={TOKEN}\r\n        mapStyle=\"mapbox://styles/mapbox/outdoors-v9\"\r\n        onViewportChange={_onViewportChange}\r\n      >\r\n        <Marker\r\n          latitude={latitude}\r\n          longitude={longitude}\r\n          offsetLeft={-20}\r\n          offsetTop={-10}\r\n        >\r\n          <div>👇</div>\r\n        </Marker>\r\n\r\n        {isEditable && (\r\n          <GeolocateControl\r\n            style={geolocateStyle}\r\n            positionOptions={{ enableHighAccuracy: true }}\r\n            trackUserLocation={true}\r\n          />\r\n          \r\n        )}\r\n      </MapGL>\r\n      {!isEditable && (\r\n        <div className=\"mapbox sidebar-ovelay\">\r\n          <figcaption>\r\n            Longitude: {viewport.longitude} | Latitude: {viewport.latitude}\r\n          </figcaption>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState } from \"react\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport List from \"../common/List\";\r\nimport Input from \"../common/Input\";\r\nimport Mapbox from \"../map\";\r\nimport \"./cards.css\";\r\n\r\nconst Cards = ({\r\n  cards,\r\n  deleteCard,\r\n  editOrAddCards,\r\n  title = \"Global Cards\",\r\n  inputs = [\"name\"],\r\n  editInputs = [\"name\"],\r\n  classInput = \"mr-bottom-1rem\",\r\n  doOnSelect = () => {},\r\n  showMap,\r\n  children\r\n}) => {\r\n  const _findCard = id => {\r\n    let found = cards.find(c => c._id === id);\r\n    found = found === -1 ? null : found;\r\n    return found;\r\n  };\r\n\r\n  // #####################\r\n  // Invoke Parent Functions\r\n  const cardAdd = () => {\r\n    setEditCard({});\r\n    // will be added on 'handleBlur'\r\n  };\r\n\r\n  const cardDelete = id => {\r\n    deleteCard(id);\r\n    // emit to parent\r\n    unSelect();\r\n  };\r\n\r\n  // ==============\r\n  // handle on user Inputs\r\n  const handleSave = () => {\r\n    // emit to parent\r\n    editOrAddCards(editCard);\r\n    unSelect();\r\n  };\r\n  \r\n  const handleInput = (key, value) => {\r\n    setEditCard({ ...editCard, [key]: value });\r\n  };\r\n\r\n  const handleBlur = (key, value) => {\r\n    setEditCard({ ...editCard, [key]: value });\r\n  };\r\n\r\n  const onEnter = () => {\r\n    handleSave();\r\n  };\r\n  // end handle inputs\r\n  // ==============\r\n\r\n  // ###############\r\n  // Invoke Local Function (mostly, some invoke parent function)\r\n  const [selectCardId, setSelectCardId] = useState();\r\n  const [editCard, setEditCard] = useState();\r\n  const [viewCard, setViewCard] = useState();\r\n  \r\n  const handleCardChoose = item => {\r\n    if (item._id === selectCardId) unSelect();\r\n    else {\r\n      console.log('item ', item);\r\n      // emit to parent\r\n      doOnSelect(item);\r\n      setSelectCardId(item._id);\r\n    }\r\n  };\r\n\r\n  const cardEdit = id => {\r\n    const foundCard = _findCard(id);\r\n    setEditCard(foundCard);\r\n    // will be set as edited on 'handleBlur'\r\n  };\r\n\r\n  const cardView = id => {\r\n    const foundCard = _findCard(id);\r\n    setViewCard(foundCard);\r\n  };\r\n\r\n  const isHighlited = c => {\r\n    return selectCardId && c._id === selectCardId ? \"highlight\" : \"\";\r\n  };\r\n\r\n  const unSelect = () => {\r\n    setSelectCardId(null);\r\n    setEditCard();\r\n    setViewCard();\r\n    doOnSelect(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      {/* <!-- ================ ============== --> */}\r\n      {/* <!-- ========== Top Toolbar ============== --> */}\r\n      {/* <!-- ================ ============== --> */}\r\n      <Toolbar\r\n        id={selectCardId}\r\n        onEdit={editCard}\r\n        edit={cardEdit}\r\n        add={cardAdd}\r\n        view={cardView}\r\n        del={cardDelete}\r\n        back={unSelect}\r\n      >\r\n        {title}\r\n      </Toolbar>\r\n      {/* <!-- ================ ============== --> */}\r\n      {/* <!-- ========== LIST ============== --> */}\r\n      {/* <!-- ================ ============== --> */}\r\n      {cards && cards[0] && !editCard && !viewCard && (\r\n        <List\r\n          list={cards}\r\n          itemClass=\"capitalized\"\r\n          handleClick={handleCardChoose}\r\n          classCondition={isHighlited}\r\n        />\r\n      )}\r\n      {/* <!-- ================ ============== --> */}\r\n      {/* <!-- =========== View Card ============== --> */}\r\n      {/* <!-- ================ ============== --> */}\r\n      {viewCard && (\r\n        <div className=\"view-card\">\r\n          {inputs &&\r\n            inputs.map((field, i) => {\r\n              return (\r\n                <span key={i} className=\"capitalized mr-bottom-1rem block\">\r\n                  {field + \" : \" + viewCard[field]}\r\n                </span>\r\n              );\r\n            })}\r\n          {viewCard && showMap && <Mapbox coords={viewCard.coords} />}\r\n        </div>\r\n      )}\r\n      {/* <!-- ================ ============== --> */}\r\n      {/* <!-- ========== Edit Card & New Card ============== --> */}\r\n      {/* <!-- ================ ============== --> */}\r\n      {editCard && (\r\n        <div className=\"edit-card capitalized\">\r\n          {editInputs &&\r\n            editInputs[0] &&\r\n            editInputs.map((field, i) => {\r\n              return (\r\n                <Input\r\n                  key={i}\r\n                  label={field}\r\n                  classInput={classInput}\r\n                  onEnter={onEnter}\r\n                  placeholder={editCard[field] || field}\r\n                  defaultValue={editCard[field]}\r\n                  handleBlur={handleBlur}\r\n                  handleInput={handleInput}\r\n                />\r\n              );\r\n            })}\r\n          {children}\r\n          <button className=\"btn btn-save\" onClick={handleSave}>\r\n            save\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","export function makeId(length = 7) {\r\n  let txt = \"\";\r\n  const possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return txt;\r\n}\r\n\r\nexport function debounce (func, wait = 2000, immediate = null) {\r\n// If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the waiting.\r\n\r\n\tlet timeout;\r\n\treturn function() {\r\n\t\tconst context = this, args = arguments;\r\n\t\tconst later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tconst callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};\r\n\r\nexport function compareString(a, b, key) {\r\n  if (a[key] < b[key])  return -1;\r\n  if (a[key] > b[key]) return 1;\r\n  return 0;\r\n}\r\n","import { makeId } from \"./UtilServices.js\";\r\n\r\nexport default {\r\n  getCat,\r\n  delCat,\r\n  editOrAdd\r\n};\r\nconst data = [\r\n  { _id: \"0ewad0\", name: \"Travel\" },\r\n  { _id: \"1djaW1\", name: \"Snowboard\" },\r\n  { _id: \"2fAcp2\", name: \"Kitesurf\" },\r\n  { _id: \"3dl0P3\", name: \"Hiking\" },\r\n  { _id: \"4ljfq4\", name: \"Luxury\" },\r\n  { _id: \"5dape5\", name: \"Trending\" },\r\n  { _id: \"6gXpf6\", name: \"Most Popular\" }\r\n];\r\nlet db;\r\nconst isLocalStorageOn = false;\r\nconst localStorageKey = \"categories\";\r\n\r\nasync function getCat() {\r\n  if (isLocalStorageOn) {\r\n    const loadCat = localStorage.getItem(localStorageKey);\r\n    if (loadCat) db = [...loadCat];\r\n  } else if(!db) db = [...data];\r\n  return _returnDB();\r\n}\r\n\r\nasync function delCat(id) {\r\n  const index = db.findIndex(c => c._id === id);\r\n  if (index === -1) return;\r\n  db.splice(index, 1);\r\n  _returnDB();\r\n}\r\n\r\nfunction _editCat(newCat) {\r\n  const idx = db.findIndex(c => c._id === newCat._id);\r\n  db[idx] = newCat; // add to the Virtual DB as well:\r\n}\r\n\r\nfunction _addCat(newCat) {\r\n  const newId = makeId();\r\n  newCat._id = newId;\r\n  db.push(newCat);\r\n}\r\n\r\nfunction editOrAdd(newCat) {\r\n  // return on empty\r\n  if (!newCat) return;\r\n\r\n  // toggle between edit and add\r\n  if (newCat._id) _editCat(newCat);\r\n  else _addCat(newCat);\r\n  _returnDB();\r\n}\r\n\r\nfunction _returnDB() {\r\n  // return new array with no connection to original db\r\n  let categories = db.map(c => c);\r\n  // SAVE TO LOCAL STORAGE :\r\n  if (isLocalStorageOn) {\r\n    localStorage.setItem(localStorageKey, categories);\r\n  }\r\n  return categories;\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Crud from \"../cmps/crud/\";\r\nimport catService from \"../services/CatService\";\r\n\r\nexport default function Categories({onCategoryChange}) {\r\n  const [cats, setCats] = useState([]);\r\n  \r\n  useEffect( () => {\r\n    getCategories()\r\n    // eslint-disable-next-line\r\n    async function fetchData() {\r\n    const categories = await catService.getCat()\r\n      setCats(categories);\r\n    }\r\n  }, []);\r\n\r\n  //   let isAjaxing = false;\r\n  \r\n  const getCategories = async () => {\r\n    setCats(await catService.getCat());\r\n    return cats;\r\n  };\r\n\r\n  const deleteCategory = async id => {\r\n    await catService.delCat(id);\r\n    onCategoryChange()\r\n    getCategories()\r\n  };\r\n  \r\n\r\n  const editOrAddCategory = async editedCat => {\r\n    await catService.editOrAdd(editedCat);\r\n    onCategoryChange()\r\n    getCategories()\r\n  };\r\n  return (\r\n    <>\r\n      <Crud\r\n        cards={cats}\r\n        deleteCard={deleteCategory}\r\n        editOrAddCards={editOrAddCategory}\r\n        title = \"Categories\"\r\n      ></Crud>\r\n    </>\r\n  );\r\n}\r\n","import { makeId } from \"./UtilServices.js\";\r\n\r\nexport default {\r\n  getLoc,\r\n  delLoc,\r\n  editOrAdd,\r\n  sortBy,\r\n  filterBy\r\n};\r\nlet db;\r\nconst data = [\r\n  {\r\n    _id: \"0ewad0\",\r\n    address: \"address\",\r\n    name: \"Brazil\",\r\n    coords: [43.4416815, -20.4285582],\r\n    category: \"Travel\"\r\n  },\r\n  {\r\n    _id: \"1djaW1\",\r\n    address: \"address\",\r\n    name: \"Austria\",\r\n    coords: [-33.4416815, -20.4285582],\r\n    category: \"Snowboard\"\r\n  },\r\n  {\r\n    _id: \"2fAcp2\",\r\n    address: \"address\",\r\n    name: \"Portugal\",\r\n    coords: [11.4416815, 31.4285582],\r\n    category: \"Kitesurf\"\r\n  },\r\n  {\r\n    _id: \"3dl0P3\",\r\n    address: \"address\",\r\n    name: \"Greece\",\r\n    coords: [22.4416815, 32.4285582],\r\n    category: \"Most Popular\"\r\n  },\r\n  {\r\n    _id: \"4ljfq4\",\r\n    address: \"address\",\r\n    name: \"Israel\",\r\n    coords: [-32.4416815, 31.4285582],\r\n    category: \"Most Popular\"\r\n  },\r\n  {\r\n    _id: \"5XjNq5\",\r\n    address: \"address\",\r\n    name: \"Dubai\",\r\n    coords: [-3.4416815, 31.4285582],\r\n    category: \"Luxury\"\r\n  },\r\n  {\r\n    _id: \"6dape6\",\r\n    address: \"address\",\r\n    name: \"Spain\",\r\n    coords: [-0.2416815, 54.5285582],\r\n    category: \"Trending\"\r\n  },\r\n  {\r\n    _id: \"723de7\",\r\n    address: \"address\",\r\n    name: \"China\",\r\n    coords: [-0.24234815, 51.5283212],\r\n    category: \"Hiking\"\r\n  },\r\n  {\r\n    _id: \"8Y3de8\",\r\n    address: \"address\",\r\n    name: \"Timbaktu\",\r\n    coords: [-0.2416815, 51.5285582],\r\n    category: \"Hiking\"\r\n  },\r\n  {\r\n    _id: \"9gXpf9\",\r\n    address: \"address\",\r\n    name: \"France\",\r\n    coords: [-0.2416815, 51.5285582],\r\n    category: \"Most Popular\"\r\n  }\r\n];\r\nconst isLocalStorageOn = false;\r\nconst localStorageKey = \"locations\";\r\n\r\nasync function getLoc() {\r\n  if (isLocalStorageOn) {\r\n    const loadCat = localStorage.getItem(localStorageKey);\r\n    if (loadCat) db = [...loadCat];\r\n  } else if (!db) db = [...data];\r\n  return _returnDB();\r\n}\r\n\r\nasync function delLoc(id) {\r\n  const index = db.findIndex(c => c._id === id);\r\n  if (index === -1) return;\r\n  db.splice(index, 1);\r\n  _returnDB();\r\n}\r\n\r\nfunction _editLoc(newLoc) {\r\n  const idx = db.findIndex(c => c._id === newLoc._id);\r\n  db[idx] = newLoc; // add to the Virtual DB as well:\r\n}\r\n\r\nfunction _addLoc(newLoc) {\r\n  const newId = makeId();\r\n  newLoc._id = newId;\r\n  db.push(newLoc);\r\n}\r\n\r\nfunction editOrAdd(newLoc) {\r\n  // return on empty\r\n  if (!newLoc) return;\r\n  console.log(newLoc.coords);\r\n  \r\n  // toggle between edit and add\r\n  if (newLoc._id) _editLoc(newLoc);\r\n  else _addLoc(newLoc);\r\n  _returnDB();\r\n}\r\n\r\nfunction _returnDB(newDb = db) {\r\n  // SAVE TO LOCAL STORAGE :\r\n  let locations = newDb.map(c => c);\r\n  if (isLocalStorageOn) {\r\n    localStorage.setItem(localStorageKey, locations);\r\n  }\r\n  // return new array with no connection to original db\r\n  return locations;\r\n}\r\n\r\nfunction sortBy(key, isAsec = true) {\r\n  const keyType = typeof db[0][key] || typeof data[0][key]\r\n  if (keyType === \"string\") {\r\n    if (isAsec) db.sort((a, b) => a[key].localeCompare(b[key]));\r\n    else db.sort((a, b) => b[key].localeCompare(a[key]));\r\n  } else db.sort();\r\n}\r\n\r\n\r\nfunction filterBy(value, key = 'category') {\r\n  if (!value) return\r\n  if (value === 'all') return _returnDB()\r\n  const filteredDb = db.filter(item => item[key] === value)\r\n  return filteredDb\r\n}","import React from \"react\";\r\n\r\nexport default function Select({\r\n  title = \"select\",\r\n  isShowAllOption = true,\r\n  dataList,\r\n  onSelect = (e) => {console.log('select', e.target.value);},\r\n  valueKey,\r\n  showKey = valueKey,\r\n  selectedOption = '',\r\n  idKey = \"\",\r\n  idKeyExp = \"\",\r\n  optionClass = \"capitalized\",\r\n  getSelectList = () => {\r\n    //getSelectList defualt: do nothing\r\n    return;\r\n  }\r\n}) {\r\n  const uniqueKey = (item, i) => {\r\n    return idKey ? item[idKey] : idKeyExp ? idKeyExp(item, i) : i;\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor=\"\"> {title} </label>\r\n      <select className=\"btn\" onClick={getSelectList} onChange={onSelect} value={selectedOption}>\r\n        { isShowAllOption && <option value=\"all\"> all</option>}\r\n        {dataList && dataList[0] && dataList.map((item, i) => (\r\n          <option\r\n            className={optionClass} \r\n            key={uniqueKey(item, i)}\r\n            value={item[valueKey]}\r\n          >\r\n            {item[showKey]}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Crud from \"../cmps/crud\";\r\nimport locService from \"../services/LocService\";\r\nimport catService from \"../services/CatService\";\r\nimport Select from \"../cmps/common/Select\";\r\nimport Map from \"../cmps/map/\";\r\n// import SearchableMap from \"../cmps/map/SearchableMap\";\r\n// import debounce from \"lodash.debounce\";\r\n\r\n// TODO :\r\n// .. LOCATION properties: name, address, coordinates, and category.\r\n\r\nexport default function Locations({ isCategorryChanged }) {\r\n  const fieldsToView = [\"name\", \"address\", \"category\"];\r\n  const fieldsToEdit = [\"name\", \"address\"];\r\n\r\n  const [categories, setCategories] = useState([\r\n    { id: null, name: \"loading...\" }\r\n  ]);\r\n  const [locs, setLocs] = useState([]);\r\n  const [isAsec, setIsAsec] = useState(true);\r\n  const [filteredBy, setFilteredBy] = useState(\"all\");\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [selectCategoryOption, setSelectCategoryOption] = useState();\r\n  const [locCoords, setLocCoords] = useState();\r\n\r\n  useEffect(() => {\r\n    getLocations();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, [isCategorryChanged]);\r\n\r\n  // service\r\n  const getLocations = async () => {\r\n    setLocs(await locService.getLoc());\r\n    return locs;\r\n  };\r\n\r\n  // service\r\n  const getCategories = async () => {\r\n    const cats = await catService.getCat();\r\n    setCategories(cats);\r\n  };\r\n\r\n  // service\r\n  const deleteLocation = async id => {\r\n    await locService.delLoc(id);\r\n    getLocations();\r\n  };\r\n\r\n  // service\r\n  const editOrAddLocation = async editedLoc => {\r\n    if (!isEditMode) return;\r\n    const coords = locCoords ? locCoords : editedLoc.coords;\r\n    console.log(coords);\r\n    const newLoc = { ...editedLoc, coords, category: selectCategoryOption };\r\n    await locService.editOrAdd(newLoc);\r\n    setIsEditMode();\r\n    getLocations();\r\n  };\r\n\r\n  // service\r\n  const filterBy = e => {\r\n    const { value } = e.target;\r\n    setFilteredBy(value);\r\n    const filteredDb = locService.filterBy(value, \"category\");\r\n    setLocs(filteredDb);\r\n  };\r\n\r\n  // service\r\n  const groupBy = () => {\r\n    locService.sortBy(\"category\");\r\n    getLocations();\r\n  };\r\n\r\n  // service\r\n  const sortBy = () => {\r\n    locService.sortBy(\"name\", isAsec);\r\n    setIsAsec(!isAsec);\r\n    getLocations();\r\n  };\r\n\r\n  const doOnSelect = editedLoc => {\r\n    // toogle sidebar\r\n    const onEditing = (editedLoc && editedLoc._id) ? true : false;\r\n    setIsEditMode(onEditing);\r\n    if (!onEditing) return;\r\n\r\n    // set currect option for the following html select options\r\n    if (editedLoc.category) setSelectCategoryOption(editedLoc.category);\r\n    \r\n    // set currect coords\r\n    if (editedLoc.coords) editCoords(editedLoc.coords);\r\n  };\r\n\r\n  const editCoords = ({ latitude, longitude }) => {\r\n    // const coords = { longitude, latitude };\r\n    setLocCoords([longitude, latitude]);\r\n  };\r\n\r\n  const changeLocCategory = e => {\r\n    const { value } = e.target;\r\n    // set the select\r\n    setSelectCategoryOption(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"locations-page\">\r\n      {isEditMode && <div></div>}\r\n      {!isEditMode && (\r\n        <div className=\"sidebar\">\r\n          {categories && categories[0] && (\r\n            <div>\r\n              filter\r\n              <Select\r\n                title=\"\"\r\n                dataList={categories}\r\n                onSelect={filterBy}\r\n                selectedOption={filteredBy}\r\n                valueKey={\"name\"}\r\n                showKey={\"name\"}\r\n                optionClass=\"capitalized\"\r\n                getSelectList={getCategories}\r\n              ></Select>\r\n            </div>\r\n          )}\r\n          <button className=\"btn\" onClick={sortBy}>\r\n            sort {isAsec ? \"  a - z\" : \"  z - a\"}\r\n          </button>\r\n          <button className=\"btn\" onClick={groupBy}>\r\n            group by category\r\n          </button>\r\n        </div>\r\n      )}\r\n      <Crud\r\n        title=\"Locations\"\r\n        cards={locs}\r\n        deleteCard={deleteLocation}\r\n        editOrAddCards={editOrAddLocation}\r\n        inputs={fieldsToView}\r\n        editInputs={fieldsToEdit}\r\n        classInput=\"mr-bottom-1rem\"\r\n        doOnSelect={doOnSelect}\r\n        showMap={true}\r\n      >\r\n        {/* children */}\r\n        <Select\r\n          title=\"category\"\r\n          isShowAllOption={false}\r\n          selectedOption={selectCategoryOption}\r\n          dataList={categories}\r\n          onSelect={changeLocCategory}\r\n          valueKey={\"name\"}\r\n          showKey={\"name\"}\r\n          optionClass=\"capitalized\"\r\n          getSelectList={getCategories}\r\n        ></Select>\r\n        {isEditMode && (\r\n          <Map coords={locCoords} isEditable={true} editCoords={editCoords} />\r\n        )}\r\n      </Crud>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../style/index.css\"\r\n\r\nexport default function ToogleBar({ handleClick, children }) {\r\n  return (\r\n    <div className=\"toggle-bar\">\r\n      <button className=\"btn\" onClick={() => handleClick(true)}> {children[0]} </button>\r\n      <button className=\"btn\"onClick={() => handleClick(false)} > {children[1]} </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport Categories from \"./views/Categories\";\nimport Locations from \"./views/Locations\";\nimport ToogleBar from \"./cmps/ToogleBar\";\n\nimport \"./style/layout.css\";\n\nfunction App() {\n  const [toggleCategories, setToggleCategories] = useState(false);\n  //true meaning show categoreis on load\n\n  const handleClick = btnClicked => {\n    if (toggleCategories === btnClicked) return;\n    const toggle = !toggleCategories;\n    setToggleCategories(toggle);\n  };\n\n  const [isCategorryChanged, setIsCategorryChanged] = useState([]);\n  const onCategoryChange = () => {\n    setIsCategorryChanged([Math.random()]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header></header>\n\n      <main>\n        {toggleCategories && <Categories onCategoryChange={onCategoryChange} />}\n        {!toggleCategories && (\n          <Locations isCategorryChanged={isCategorryChanged} />\n        )}\n      </main>\n\n      <footer>\n        <ToogleBar handleClick={handleClick}>\n          {[\"Categories\", \"Locations\"]}\n        </ToogleBar>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}