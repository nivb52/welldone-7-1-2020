{"version":3,"sources":["cmps/map/index.jsx"],"names":["GeolocateControl","React","lazy","Geocoder","TOKEN","require","mapbox","isExitsAsFunc","f","geolocateStyle","float","margin","padding","Map","coords","editCoords","editAddressByGeocoder","isEditable","longitude","latitude","useState","width","height","zoom","viewport","setViewPort","mapRef","useRef","style","display","justifyContent","ref","mapboxApiAccessToken","mapStyle","onViewportChange","transitionDuration","offsetLeft","offsetTop","fallback","positionOptions","enableHighAccuracy","trackUserLocation","onResult","result","coordinates","geometry","position","className"],"mappings":"2VAQMA,EAAmBC,IAAMC,MAAK,kBAAM,2CACpCC,EAAWF,IAAMC,MAAK,kBAAM,gCAI5BE,EADQC,EAAQ,IACFC,OAGdC,EAAgB,SAACC,GACnB,OAAOA,GAAkB,oBAANA,GAIjBC,EAAiB,CACrBC,MAAO,OACPC,OAAQ,OACRC,QAAS,QA6FIC,UAvFH,SAAC,GAKN,IAJLC,EAII,EAJJA,OAII,IAHJC,kBAGI,MAHS,KAGT,MAFJC,6BAEI,MAFoB,KAEpB,MADJC,kBACI,SACEC,EAAYJ,GAAUA,EAAO,GAAKA,EAAO,GAAK,EAC9CK,EAAWL,GAAUA,EAAO,GAAKA,EAAO,GAAK,EAF/C,EAI4BM,mBAAS,CACvCC,MAAO,OACPC,OAAQ,OACRJ,YACAC,WACAI,KAAM,IATJ,mBAIGC,EAJH,KAIaC,EAJb,KAWEC,EAASzB,IAAM0B,SAuBrB,OACE,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,kBAAC,UAAD,iBACMN,EADN,CAEEO,IAAKL,EACLM,qBAAsB5B,EACtB6B,SAAS,qCACTC,iBAdkB,SAAAV,GACjBP,IACLQ,EAAY,eAAKD,EAAN,CAAgBW,mBAAoB,OAE3C5B,EAAcQ,IAAaA,EAAWS,OAYtC,kBAAC,SAAD,CACEL,SAAUA,EACVD,UAAWA,EACXkB,YAAa,GACbC,WAAY,IAEZ,8CAGDpB,GACC,oCACE,kBAAC,WAAD,CAAUqB,SAAU,4CAClB,kBAACtC,EAAD,CACE4B,MAAOnB,EACP8B,gBAAiB,CAAEC,oBAAoB,GACvCC,mBAAmB,EACnBT,qBAAsB5B,IAExB,kBAACD,EAAD,CACE6B,qBAAsB5B,EACtBsB,OAAQA,EACRgB,SAnDS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChBC,EAAgBD,EAAOE,SAAvBD,YAD6B,cAEPA,EAFO,GAE9B1B,EAF8B,KAEnBC,EAFmB,KAGrCM,EAAY,eAAKD,EAAN,CAAgBN,YAAWC,WAAUgB,mBAAoB,OAGhE5B,EAAcQ,IACdA,EAAWS,GAEXjB,EAAcS,IACdA,EAAsB2B,IA0CdG,SAAS,kBAMjB7B,GACA,yBAAK8B,UAAU,yBACb,kDACcvB,EAASN,UADvB,gBAC+CM,EAASL","file":"static/js/1.ee0450e3.chunk.js","sourcesContent":["import \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport \"./mapbox.css\";\r\n\r\nimport React, { useState, Suspense } from \"react\";\r\nimport MapGL, { Marker } from \"react-map-gl\";\r\n\r\n// Lazy Load (with React Suspense)\r\nconst GeolocateControl = React.lazy(() => import(\"react-map-gl\"));\r\nconst Geocoder = React.lazy(() => import(\"react-map-gl-geocoder\"));\r\n\r\n// TOKEN\r\nconst token = require(\"../../secrets/api.json\");\r\nconst TOKEN = token.mapbox;\r\n\r\n// UTIL FOR RE-USE\r\nconst isExitsAsFunc = (f) => {\r\n    return f && typeof f === \"function\"\r\n}\r\n\r\n// Style\r\nconst geolocateStyle = {\r\n  float: \"left\",\r\n  margin: \"50px\",\r\n  padding: \"10px\"\r\n};\r\n\r\n// =======================\r\n// =======================\r\n// Map Component => \r\nconst Map = ({\r\n  coords,\r\n  editCoords = null,\r\n  editAddressByGeocoder = null,\r\n  isEditable = false\r\n}) => {\r\n  const longitude = coords && coords[0] ? coords[0] : 0;\r\n  const latitude = coords && coords[1] ? coords[1] : 0;\r\n\r\n  const [viewport, setViewPort] = useState({\r\n    width: \"70vw\",\r\n    height: \"60vh\",\r\n    longitude,\r\n    latitude,\r\n    zoom: 5\r\n  });\r\n  const mapRef = React.useRef();\r\n\r\n  const handleOnResult = ({ result }) => {\r\n    const { coordinates } = result.geometry;\r\n    const [longitude, latitude] = coordinates;\r\n    setViewPort({ ...viewport, longitude, latitude, transitionDuration: 3000 });\r\n\r\n    // emits\r\n    if (isExitsAsFunc(editCoords)) {\r\n        editCoords(viewport);\r\n    }\r\n    if (isExitsAsFunc(editAddressByGeocoder)) {\r\n        editAddressByGeocoder(result);\r\n    }\r\n};\r\n\r\nconst _onViewportChange = viewport => {\r\n    if (!isEditable) return ;\r\n    setViewPort({ ...viewport, transitionDuration: 3000 });\r\n    // emit\r\n    if (isExitsAsFunc(editCoords)) editCoords(viewport);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <MapGL\r\n        {...viewport}\r\n        ref={mapRef}\r\n        mapboxApiAccessToken={TOKEN}\r\n        mapStyle=\"mapbox://styles/mapbox/outdoors-v9\"\r\n        onViewportChange={_onViewportChange}\r\n      >\r\n        <Marker\r\n          latitude={latitude}\r\n          longitude={longitude}\r\n          offsetLeft={-20}\r\n          offsetTop={-10}\r\n        >\r\n          <div>ðŸ‘‡</div>\r\n        </Marker>\r\n\r\n        {isEditable && (\r\n          <>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <GeolocateControl\r\n                style={geolocateStyle}\r\n                positionOptions={{ enableHighAccuracy: true }}\r\n                trackUserLocation={true}\r\n                mapboxApiAccessToken={TOKEN}\r\n              />\r\n              <Geocoder\r\n                mapboxApiAccessToken={TOKEN}\r\n                mapRef={mapRef}\r\n                onResult={handleOnResult}\r\n                position=\"top-right\"\r\n              />\r\n            </Suspense>\r\n          </>\r\n        )}\r\n      </MapGL>\r\n      {!isEditable && (\r\n        <div className=\"mapbox sidebar-ovelay\">\r\n          <figcaption>\r\n            Longitude: {viewport.longitude} | Latitude: {viewport.latitude}\r\n          </figcaption>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"sourceRoot":""}