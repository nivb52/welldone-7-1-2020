{"version":3,"sources":["cmps/map/index.jsx","cmps/crud/Toolbar.jsx","cmps/common/List.jsx","cmps/common/Input.jsx","cmps/crud/index.jsx","services/UtilServices.js","services/config.js","services/CatService.js","views/Categories.jsx","services/LocService.js","cmps/common/Select.jsx","views/Locations.jsx","cmps/ToogleBar.jsx","App.js","serviceWorker.js","index.js"],"names":["GeolocateControl","React","lazy","Geocoder","TOKEN","require","mapbox","geolocateStyle","float","margin","padding","Map","coords","editCoords","editAddressByGeocoder","isEditable","longitude","latitude","useState","width","height","zoom","viewport","setViewPort","mapRef","useRef","style","display","justifyContent","ref","mapboxApiAccessToken","mapStyle","onViewportChange","transitionDuration","offsetLeft","offsetTop","fallback","positionOptions","enableHighAccuracy","trackUserLocation","onResult","result","console","log","coordinates","geometry","position","className","Toolbar","children","id","back","view","edit","onEdit","del","add","handleClick","type","onClick","List","list","parentClass","nameClass","classCondition","itemClass","map","item","key","_id","name","Input","label","objectKey","placeholder","onEnter","handleInput","handleBlur","classInput","defaultValue","userInput","setUserInput","isValid","setIsValide","onKeyDown","e","keyCode","onChange","value","target","trim","onBlur","Cards","cards","deleteCard","editOrAddCards","title","inputs","editInputs","doOnSelect","showMap","_findCard","found","find","c","handleSave","editCard","unSelect","setEditCard","selectCardId","setSelectCardId","viewCard","setViewCard","foundCard","field","i","makeId","length","txt","possible","charAt","Math","floor","random","db","isLocalStorageOn","obj","propertyPath","properties","split","currKey","hasOwnProperty","hasOwnNestedProperty","window","document","location","hostname","getCat","a","async","loadedDB","JSON","parse","localStorage","getItem","data","_returnDB","delCat","index","findIndex","splice","editOrAdd","newCat","idx","_editCat","newId","push","_addCat","categories","setItem","stringify","Categories","onCategoryChange","cats","setCats","useEffect","getCategories","catService","editedCat","getLoc","delLoc","newLoc","_editLoc","_addLoc","sortBy","isAsec","keyType","sort","b","localeCompare","filterBy","filteredDb","filter","address","category","newDb","locations","Select","isShowAllOption","dataList","onSelect","valueKey","showKey","selectedOption","idKey","idKeyExp","optionClass","getSelectList","uniqueKey","htmlFor","fieldsToView","fieldsToEdit","Locations","isCategorryChanged","setCategories","locs","setLocs","setIsAsec","filteredBy","setFilteredBy","isEditMode","setIsEditMode","selectCategoryOption","setSelectCategoryOption","currentCoords","setCurrentCoords","currentAddress","setCurrentAddress","getLocations","locService","editedLoc","onEditing","text","place_name","ToogleBar","App","toggleCategories","setToggleCategories","setIsCategorryChanged","btnClicked","Boolean","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7939cdf2.chunk.js","sourcesContent":["import \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport \"./mapbox.css\";\r\n\r\nimport React, { useState, Suspense } from \"react\";\r\nimport MapGL, { Marker } from \"react-map-gl\";\r\n// Lazy load\r\nconst GeolocateControl = React.lazy(() => import(\"react-map-gl\"));\r\nconst Geocoder = React.lazy(() => import(\"react-map-gl-geocoder\"));\r\n\r\nconst token = require(\"../../secrets/api.json\");\r\nconst TOKEN = token.mapbox;\r\n\r\n// Local vars\r\nconst geolocateStyle = {\r\n  float: \"left\",\r\n  margin: \"50px\",\r\n  padding: \"10px\"\r\n};\r\n\r\n// .. The Map Component => \r\nconst Map = ({\r\n  coords,\r\n  editCoords = null,\r\n  editAddressByGeocoder = null,\r\n  isEditable = false\r\n}) => {\r\n  const longitude = coords && coords[0] ? coords[0] : 0;\r\n  const latitude = coords && coords[1] ? coords[1] : 0;\r\n\r\n  const [viewport, setViewPort] = useState({\r\n    width: \"70vw\",\r\n    height: \"60vh\",\r\n    longitude,\r\n    latitude,\r\n    zoom: 5\r\n  });\r\n  const mapRef = React.useRef();\r\n\r\n  const handleOnResult = ({ result }) => {\r\n    console.log(result);\r\n    const { coordinates } = result.geometry;\r\n    const [longitude, latitude] = coordinates;\r\n    setViewPort({ ...viewport, longitude, latitude, transitionDuration: 3000 });\r\n    // emit\r\n    if (editCoords && typeof editCoords === \"function\") {\r\n      editCoords(viewport);\r\n    }\r\n    if (editAddressByGeocoder && typeof editAddressByGeocoder === \"function\") {\r\n      editAddressByGeocoder(result);\r\n    }\r\n  };\r\n\r\n  const _onViewportChange = viewport => {\r\n    if (!isEditable) return ;\r\n    setViewPort({ ...viewport, transitionDuration: 3000 });\r\n    if (editCoords) editCoords(viewport);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <MapGL\r\n        {...viewport}\r\n        ref={mapRef}\r\n        mapboxApiAccessToken={TOKEN}\r\n        mapStyle=\"mapbox://styles/mapbox/outdoors-v9\"\r\n        onViewportChange={_onViewportChange}\r\n      >\r\n        <Marker\r\n          latitude={latitude}\r\n          longitude={longitude}\r\n          offsetLeft={-20}\r\n          offsetTop={-10}\r\n        >\r\n          <div>👇</div>\r\n        </Marker>\r\n\r\n        {isEditable && (\r\n          <>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <GeolocateControl\r\n                style={geolocateStyle}\r\n                positionOptions={{ enableHighAccuracy: true }}\r\n                trackUserLocation={true}\r\n                mapboxApiAccessToken={TOKEN}\r\n              />\r\n              <Geocoder\r\n                mapboxApiAccessToken={TOKEN}\r\n                mapRef={mapRef}\r\n                onResult={handleOnResult}\r\n                position=\"top-right\"\r\n              />\r\n            </Suspense>\r\n          </>\r\n        )}\r\n      </MapGL>\r\n      {!isEditable && (\r\n        <div className=\"mapbox sidebar-ovelay\">\r\n          <figcaption>\r\n            Longitude: {viewport.longitude} | Latitude: {viewport.latitude}\r\n          </figcaption>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\n\r\nconst Toolbar = ({ children, id, back, view, edit, onEdit, del, add }) => {\r\n  const handleClick = (type, id) => {\r\n    switch (type) {\r\n      case \"back\":\r\n        back();\r\n        break;\r\n      case \"view\":\r\n        view(id);\r\n        break;\r\n      case \"edit\":\r\n        edit(id);\r\n        break;\r\n      case \"del\":\r\n        del(id);\r\n        break;\r\n      case \"add\":\r\n        add();\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <h1>{children}</h1>\r\n      \r\n      {!onEdit && !id && (\r\n        <>\r\n          <button onClick={() => handleClick(\"add\")} className=\"btn\">\r\n            new\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {onEdit && !id && (\r\n        <button onClick={() => handleClick(\"back\")} className=\"btn\">\r\n          back\r\n        </button>\r\n      )}\r\n\r\n      {id && (\r\n        <div className=\"toolbar-btn\">\r\n          <button onClick={() => handleClick(\"back\")} className=\"btn\">\r\n            back\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => handleClick(\"view\", id)}\r\n            className=\"btn btn-info\"\r\n          >\r\n            view\r\n          </button>\r\n          <button\r\n            onClick={() => handleClick(\"edit\", id)}\r\n            className=\"btn btn-success\"\r\n          >\r\n            edit\r\n          </button>\r\n          <button\r\n            onClick={() => handleClick(\"del\", id)}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            delete\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nexport default function List({\r\n  list,\r\n  handleClick,\r\n  parentClass = \"card\",\r\n  nameClass = \"card-name\",\r\n  classCondition = () => {return},\r\n  itemClass = ''\r\n}) {\r\n  return (\r\n    <>\r\n      {list.map(item => (\r\n        <div\r\n          className={parentClass + \" \" + classCondition(item)}\r\n          key={item._id}\r\n          onClick={() => handleClick(item)}\r\n        >\r\n          <div className={nameClass}>\r\n            <span className={itemClass}>{item.name}</span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Input({\r\n  label = \"name\",\r\n  objectKey = '',\r\n  placeholder = \"enter here\",\r\n  onEnter,\r\n  handleInput,\r\n  handleBlur,\r\n  classInput = \"\",\r\n  defaultValue = \"\"\r\n}) {\r\n  const [userInput, setUserInput] = useState(defaultValue);\r\n  const [isValid, setIsValide] = useState(true);\r\n  const handleEnter = e => {\r\n    if (e.keyCode === 13) return onEnter();\r\n  };\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    if (!value || !value.trim()) return setIsValide(false);\r\n    else {\r\n      setIsValide(true);\r\n      setUserInput(value);\r\n      handleInput(key,userInput)\r\n    }\r\n  };\r\n\r\n  const key = objectKey || label\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <label className=\"block\">{label}</label>\r\n      <input\r\n        className={classInput}\r\n        onKeyDown={handleEnter}\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        onBlur={() => handleBlur(key, userInput)}\r\n      />\r\n      {isValid ? \"✅\" : \"❌\"}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport List from \"../common/List\";\r\nimport Input from \"../common/Input\";\r\nimport Mapbox from \"../map\";\r\nimport \"./cards.css\";\r\n\r\nconst Cards = ({\r\n  cards,\r\n  deleteCard,\r\n  editOrAddCards,\r\n  title = \"Global Cards\",\r\n  inputs = [\"name\"],\r\n  editInputs = [\"name\"],\r\n  classInput = \"mr-bottom-1rem\",\r\n  doOnSelect = () => {},\r\n  showMap,\r\n  children\r\n}) => {\r\n  const _findCard = id => {\r\n    let found = cards.find(c => c._id === id);\r\n    found = found === -1 ? null : found;\r\n    return found;\r\n  };\r\n\r\n  // #####################\r\n  // Invoke Parent Functions\r\n  const cardAdd = () => {\r\n    setEditCard({});\r\n    // will be added on 'handleBlur'\r\n  };\r\n\r\n  const cardDelete = id => {\r\n    deleteCard(id);\r\n    // emit to parent\r\n    unSelect();\r\n  };\r\n\r\n  // ==============\r\n  // handle on user Inputs\r\n  const handleSave = () => {\r\n    // emit to parent\r\n    editOrAddCards(editCard);\r\n    unSelect();\r\n  };\r\n  \r\n  const handleInput = (key, value) => {\r\n    setEditCard({ ...editCard, [key]: value });\r\n  };\r\n\r\n  const handleBlur = (key, value) => {\r\n    setEditCard({ ...editCard, [key]: value });\r\n  };\r\n\r\n  const onEnter = () => {\r\n    handleSave();\r\n  };\r\n  // end handle inputs\r\n  // ==============\r\n\r\n  // ###############\r\n  // Invoke Local Function (mostly, some invoke parent function)\r\n  const [selectCardId, setSelectCardId] = useState();\r\n  const [editCard, setEditCard] = useState();\r\n  const [viewCard, setViewCard] = useState();\r\n  \r\n  const handleCardChoose = item => {\r\n    if (item._id === selectCardId) unSelect();\r\n    else {\r\n      console.log('item ', item);\r\n      // emit to parent\r\n      doOnSelect(item);\r\n      setSelectCardId(item._id);\r\n    }\r\n  };\r\n\r\n  const cardEdit = id => {\r\n    const foundCard = _findCard(id);\r\n    setEditCard(foundCard);\r\n    // will be set as edited on 'handleBlur'\r\n  };\r\n\r\n  const cardView = id => {\r\n    const foundCard = _findCard(id);\r\n    setViewCard(foundCard);\r\n  };\r\n\r\n  const isHighlited = c => {\r\n    return selectCardId && c._id === selectCardId ? \"highlight\" : \"\";\r\n  };\r\n\r\n  const unSelect = () => {\r\n    setSelectCardId(null);\r\n    setEditCard();\r\n    setViewCard();\r\n    doOnSelect(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      {/* <!-- ================ ============== --> */}\r\n      {/* <!-- ========== Top Toolbar ============== --> */}\r\n      {/* <!-- ================ ============== --> */}\r\n      <Toolbar\r\n        id={selectCardId}\r\n        onEdit={editCard}\r\n        edit={cardEdit}\r\n        add={cardAdd}\r\n        view={cardView}\r\n        del={cardDelete}\r\n        back={unSelect}\r\n      >\r\n        {title}\r\n      </Toolbar>\r\n      {/* <!-- ================ ============== --> */}\r\n      {/* <!-- ========== LIST ============== --> */}\r\n      {/* <!-- ================ ============== --> */}\r\n      {cards && cards[0] && !editCard && !viewCard && (\r\n        <List\r\n          list={cards}\r\n          itemClass=\"capitalized\"\r\n          handleClick={handleCardChoose}\r\n          classCondition={isHighlited}\r\n        />\r\n      )}\r\n      {/* <!-- ================ ============== --> */}\r\n      {/* <!-- =========== View Card ============== --> */}\r\n      {/* <!-- ================ ============== --> */}\r\n      {viewCard && (\r\n        <div className=\"view-card\">\r\n          {inputs &&\r\n            inputs.map((field, i) => {\r\n              return (\r\n                <span key={i} className=\"capitalized mr-bottom-1rem block\">\r\n                  {field + \" : \" + viewCard[field]}\r\n                </span>\r\n              );\r\n            })}\r\n          {viewCard && showMap && <Mapbox coords={viewCard.coords} />}\r\n        </div>\r\n      )}\r\n      {/* <!-- ================ ============== --> */}\r\n      {/* <!-- ========== Edit Card & New Card ============== --> */}\r\n      {/* <!-- ================ ============== --> */}\r\n      {editCard && (\r\n        <div className=\"edit-card capitalized\">\r\n          {editInputs &&\r\n            editInputs[0] &&\r\n            editInputs.map((field, i) => {\r\n              return (\r\n                <Input\r\n                  key={i}\r\n                  label={field}\r\n                  classInput={classInput}\r\n                  onEnter={onEnter}\r\n                  placeholder={editCard[field] || field}\r\n                  defaultValue={editCard[field]}\r\n                  handleBlur={handleBlur}\r\n                  handleInput={handleInput}\r\n                />\r\n              );\r\n            })}\r\n          {children}\r\n          <button className=\"btn btn-save\" onClick={handleSave}>\r\n            save\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","export function makeId(length = 7) {\r\n  let txt = \"\";\r\n  const possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return txt;\r\n}\r\n\r\nexport function hasOwnNestedProperty(obj,propertyPath){\r\n\t// if (typeof obj !== 'object' && obj !== null) throw Error ('provided type is not a object or is a null')\r\n\tconst properties = propertyPath.split('.');\r\n\tfor (let i = 0; i < properties.length; i++ ){\r\n\t\tconst currKey = properties[i]\r\n\t\tif (obj && obj.hasOwnProperty(currKey)) {\r\n\t\t\tobj = obj[currKey]\r\n\t\t} else return false\r\n\t}\r\n\treturn true\r\n}\r\n\r\nexport function compareString(a, b, key) {\r\n\tif (a[key] < b[key])  return -1;\r\n\tif (a[key] > b[key]) return 1;\r\n\treturn 0;\r\n  }\r\n  \r\n\r\n// // FROM UNDERSCORE\r\n// export function debounce (func, wait = 2000, immediate = null) {\r\n// // If `immediate` is passed, trigger the function on the\r\n// // leading edge, instead of the waiting.\r\n\r\n// \tlet timeout;\r\n// \treturn function() {\r\n// \t\tconst context = this, args = arguments;\r\n// \t\tconst later = function() {\r\n// \t\t\ttimeout = null;\r\n// \t\t\tif (!immediate) func.apply(context, args);\r\n// \t\t};\r\n// \t\tconst callNow = immediate && !timeout;\r\n// \t\tclearTimeout(timeout);\r\n// \t\ttimeout = setTimeout(later, wait);\r\n// \t\tif (callNow) func.apply(context, args);\r\n// \t};\r\n// };\r\n\r\n","import { hasOwnNestedProperty } from \"./UtilServices.js\";\r\n\r\nexport const isLocalStorageOn =\r\nhasOwnNestedProperty(window, \"document.location.hostname\") &&\r\nwindow.document.location.hostname === \"localhost\"\r\n  ? false\r\n  : true;\r\n","import { makeId } from \"./UtilServices.js\";\r\nimport {isLocalStorageOn} from './config';\r\n\r\nexport default {\r\n  getCat,\r\n  delCat,\r\n  editOrAdd\r\n};\r\nlet db;\r\nconst data = [\r\n  { _id: \"0ewad0\", name: \"Travel\" },\r\n  { _id: \"1djaW1\", name: \"Snowboard\" },\r\n  { _id: \"2fAcp2\", name: \"Kitesurf\" },\r\n  { _id: \"3dl0P3\", name: \"Hiking\" },\r\n  { _id: \"4ljfq4\", name: \"Luxury\" },\r\n  { _id: \"5dape5\", name: \"Trending\" },\r\n  { _id: \"6gXpf6\", name: \"Most Popular\" }\r\n];\r\n\r\nconst localStorageKey = \"categories\";\r\n\r\nasync function getCat() {\r\n  if (isLocalStorageOn) {\r\n    const loadedDB = JSON.parse(localStorage.getItem(localStorageKey));\r\n    if (loadedDB) db = [...loadedDB];\r\n    else db = [...data];\r\n  } else if(!db) db = [...data];\r\n  return _returnDB();\r\n}\r\n\r\nasync function delCat(id) {\r\n  const index = db.findIndex(c => c._id === id);\r\n  if (index === -1) return;\r\n  db.splice(index, 1);\r\n  _returnDB();\r\n}\r\n\r\nfunction _editCat(newCat) {\r\n  const idx = db.findIndex(c => c._id === newCat._id);\r\n  db[idx] = newCat; // add to the Virtual DB as well:\r\n}\r\n\r\nfunction _addCat(newCat) {\r\n  const newId = makeId();\r\n  newCat._id = newId;\r\n  db.push(newCat);\r\n}\r\n\r\nfunction editOrAdd(newCat) {\r\n  // return on empty\r\n  if (!newCat) return;\r\n\r\n  // toggle between edit and add\r\n  if (newCat._id) _editCat(newCat);\r\n  else _addCat(newCat);\r\n  _returnDB();\r\n}\r\n\r\nfunction _returnDB() {\r\n  // return new array with no connection to original db\r\n  let categories = db.map(c => c);\r\n  // SAVE TO LOCAL STORAGE :\r\n  if (isLocalStorageOn) {\r\n    localStorage.setItem(localStorageKey,JSON.stringify(categories));\r\n  }\r\n  return categories;\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Crud from \"../cmps/crud/\";\r\nimport catService from \"../services/CatService\";\r\n\r\nexport default function Categories({onCategoryChange}) {\r\n  const [cats, setCats] = useState([]);\r\n  \r\n  useEffect( () => {\r\n    getCategories()\r\n    // eslint-disable-next-line\r\n    async function fetchData() {\r\n    const categories = await catService.getCat()\r\n      setCats(categories);\r\n    }\r\n  }, []);\r\n\r\n  //   let isAjaxing = false;\r\n  \r\n  const getCategories = async () => {\r\n    setCats(await catService.getCat());\r\n    return cats;\r\n  };\r\n\r\n  const deleteCategory = async id => {\r\n    await catService.delCat(id);\r\n    onCategoryChange()\r\n    getCategories()\r\n  };\r\n  \r\n\r\n  const editOrAddCategory = async editedCat => {\r\n    await catService.editOrAdd(editedCat);\r\n    onCategoryChange()\r\n    getCategories()\r\n  };\r\n  return (\r\n    <>\r\n      <Crud\r\n        cards={cats}\r\n        deleteCard={deleteCategory}\r\n        editOrAddCards={editOrAddCategory}\r\n        title = \"Categories\"\r\n      ></Crud>\r\n    </>\r\n  );\r\n}\r\n","import { makeId } from \"./UtilServices\";\r\nimport { isLocalStorageOn } from \"./config\";\r\n\r\nexport default {\r\n  getLoc,\r\n  delLoc,\r\n  editOrAdd,\r\n  sortBy,\r\n  filterBy\r\n};\r\n\r\nlet db;\r\nconst data = [\r\n  {\r\n    _id: \"0ewad0\",\r\n    address: \"address\",\r\n    name: \"Brazil\",\r\n    coords: [43.4416815, -20.4285582],\r\n    category: \"Travel\"\r\n  },\r\n  {\r\n    _id: \"1djaW1\",\r\n    address: \"address\",\r\n    name: \"Austria\",\r\n    coords: [-33.4416815, -20.4285582],\r\n    category: \"Snowboard\"\r\n  },\r\n  {\r\n    _id: \"2fAcp2\",\r\n    address: \"address\",\r\n    name: \"Portugal\",\r\n    coords: [11.4416815, 31.4285582],\r\n    category: \"Kitesurf\"\r\n  },\r\n  {\r\n    _id: \"3dl0P3\",\r\n    address: \"address\",\r\n    name: \"Greece\",\r\n    coords: [22.4416815, 32.4285582],\r\n    category: \"Most Popular\"\r\n  },\r\n  {\r\n    _id: \"4ljfq4\",\r\n    address: \"address\",\r\n    name: \"Israel\",\r\n    coords: [-32.4416815, 31.4285582],\r\n    category: \"Most Popular\"\r\n  },\r\n  {\r\n    _id: \"5XjNq5\",\r\n    address: \"address\",\r\n    name: \"Dubai\",\r\n    coords: [-3.4416815, 31.4285582],\r\n    category: \"Luxury\"\r\n  },\r\n  {\r\n    _id: \"6dape6\",\r\n    address: \"address\",\r\n    name: \"Spain\",\r\n    coords: [-0.2416815, 54.5285582],\r\n    category: \"Trending\"\r\n  },\r\n  {\r\n    _id: \"723de7\",\r\n    address: \"address\",\r\n    name: \"China\",\r\n    coords: [-0.24234815, 51.5283212],\r\n    category: \"Hiking\"\r\n  },\r\n  {\r\n    _id: \"8Y3de8\",\r\n    address: \"address\",\r\n    name: \"Timbaktu\",\r\n    coords: [-0.2416815, 51.5285582],\r\n    category: \"Hiking\"\r\n  },\r\n  {\r\n    _id: \"9gXpf9\",\r\n    address: \"address\",\r\n    name: \"France\",\r\n    coords: [-0.2416815, 51.5285582],\r\n    category: \"Most Popular\"\r\n  }\r\n];\r\n\r\nconst localStorageKey = \"locations\";\r\n\r\nasync function getLoc() {\r\n  if (isLocalStorageOn) {\r\n    const loadedDB = JSON.parse(localStorage.getItem(localStorageKey));\r\n    if (loadedDB) db = [...loadedDB];\r\n    else db = [...data];\r\n  } else if (!db) db = [...data];\r\n  return _returnDB();\r\n}\r\n\r\nasync function delLoc(id) {\r\n  const index = db.findIndex(c => c._id === id);\r\n  if (index === -1) return;\r\n  db.splice(index, 1);\r\n  _returnDB();\r\n}\r\n\r\nfunction _editLoc(newLoc) {\r\n  const idx = db.findIndex(c => c._id === newLoc._id);\r\n  db[idx] = newLoc; // add to the Virtual DB as well:\r\n}\r\n\r\nfunction _addLoc(newLoc) {\r\n  const newId = makeId();\r\n  newLoc._id = newId;\r\n  db.push(newLoc);\r\n}\r\n\r\nfunction editOrAdd(newLoc) {\r\n  // return on empty\r\n  if (!newLoc) return;\r\n\r\n  // toggle between edit and add\r\n  if (newLoc._id) _editLoc(newLoc);\r\n  else _addLoc(newLoc);\r\n  _returnDB();\r\n}\r\n\r\nfunction _returnDB(newDb = db) {\r\n  // SAVE TO LOCAL STORAGE :\r\n  let locations = newDb.map(c => c);\r\n  if (isLocalStorageOn) {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(locations));\r\n  }\r\n  // return new array with no connection to original db\r\n  return locations;\r\n}\r\n\r\nfunction sortBy(key, isAsec = true) {\r\n  const keyType = typeof db[0][key] || typeof data[0][key];\r\n  if (keyType === \"string\") {\r\n    if (isAsec) db.sort((a, b) => a[key].localeCompare(b[key]));\r\n    else db.sort((a, b) => b[key].localeCompare(a[key]));\r\n  } else db.sort();\r\n}\r\n\r\nfunction filterBy(value, key = \"category\") {\r\n  if (!value) return;\r\n  if (value === \"all\") return _returnDB();\r\n  const filteredDb = db.filter(item => item[key] === value);\r\n  return filteredDb;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Select({\r\n  title = \"select\",\r\n  isShowAllOption = true,\r\n  dataList,\r\n  onSelect = (e) => {console.log('select', e.target.value);},\r\n  valueKey,\r\n  showKey = valueKey,\r\n  selectedOption = '',\r\n  idKey = \"\",\r\n  idKeyExp = \"\",\r\n  optionClass = \"capitalized\",\r\n  getSelectList = () => {\r\n    //getSelectList defualt: do nothing\r\n    return;\r\n  }\r\n}) {\r\n  const uniqueKey = (item, i) => {\r\n    return idKey ? item[idKey] : idKeyExp ? idKeyExp(item, i) : i;\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor=\"\"> {title} </label>\r\n      <select className=\"btn\" onClick={getSelectList} onChange={onSelect} value={selectedOption}>\r\n        { isShowAllOption && <option value=\"all\"> all</option>}\r\n        {dataList && dataList[0] && dataList.map((item, i) => (\r\n          <option\r\n            className={optionClass} \r\n            key={uniqueKey(item, i)}\r\n            value={item[valueKey]}\r\n          >\r\n            {item[showKey]}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState, Suspense } from \"react\";\r\nimport Crud from \"../cmps/crud\";\r\nimport locService from \"../services/LocService\";\r\nimport catService from \"../services/CatService\";\r\nimport Select from \"../cmps/common/Select\";\r\n// import Map from \"../cmps/map/\";\r\n\r\nconst Map = React.lazy(() => import(\"../cmps/map/\"));\r\n\r\n//For Crud component :\r\nconst fieldsToView = [\"name\", \"address\", \"category\"];\r\nconst fieldsToEdit = [\"name\", \"address\"];\r\n\r\n// ==================\r\n// Location component:\r\nexport default function Locations({ isCategorryChanged }) {\r\n  const [categories, setCategories] = useState([\r\n    { _id: 0, name: \"loading...\" }\r\n  ]);\r\n\r\n  const [locs, setLocs] = useState([]);\r\n  const [isAsec, setIsAsec] = useState(true);\r\n  const [filteredBy, setFilteredBy] = useState(\"all\");\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  // current card state (on emited changed)\r\n  const [selectCategoryOption, setSelectCategoryOption] = useState();\r\n  const [currentCoords, setCurrentCoords] = useState();\r\n  const [currentAddress, setCurrentAddress] = useState();\r\n\r\n  useEffect(() => {\r\n    getLocations();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, [isCategorryChanged]);\r\n\r\n  // service\r\n  const getLocations = async () => {\r\n    setLocs(await locService.getLoc());\r\n    return locs;\r\n  };\r\n\r\n  // service\r\n  const getCategories = async () => {\r\n    const cats = await catService.getCat();\r\n    setCategories(cats);\r\n  };\r\n\r\n  // service\r\n  const deleteLocation = async id => {\r\n    await locService.delLoc(id);\r\n    getLocations();\r\n  };\r\n\r\n  // service\r\n  const editOrAddLocation = async editedLoc => {\r\n    if (!isEditMode) return;\r\n    const coords = currentCoords ? currentCoords : editedLoc.coords;\r\n    const address = currentAddress ? currentAddress : editedLoc.address;\r\n    console.log('editOrAddLocation : ',currentAddress);\r\n    const newLoc = {\r\n      ...editedLoc,\r\n      address,\r\n      coords,\r\n      category: selectCategoryOption\r\n    };\r\n    await locService.editOrAdd(newLoc);\r\n    setIsEditMode();\r\n    getLocations();\r\n  };\r\n\r\n  // service\r\n  const filterBy = e => {\r\n    const { value } = e.target;\r\n    setFilteredBy(value);\r\n    const filteredDb = locService.filterBy(value, \"category\");\r\n    setLocs(filteredDb);\r\n  };\r\n\r\n  // service\r\n  const groupBy = () => {\r\n    locService.sortBy(\"category\");\r\n    getLocations();\r\n  };\r\n\r\n  // service\r\n  const sortBy = () => {\r\n    locService.sortBy(\"name\", isAsec);\r\n    setIsAsec(!isAsec);\r\n    getLocations();\r\n  };\r\n\r\n  const doOnSelect = editedLoc => {\r\n    // toogle sidebar\r\n    const onEditing = editedLoc && editedLoc._id ? true : false;\r\n    setIsEditMode(onEditing);\r\n    if (!onEditing) return;\r\n\r\n    // set currect option for the following html select options\r\n    if (editedLoc.category) setSelectCategoryOption(editedLoc.category);\r\n\r\n    // set currect coords\r\n    if (editedLoc.coords) editCoords(editedLoc.coords);\r\n  };\r\n\r\n  const editCoords = ({ latitude, longitude }) => {\r\n    // const coords = { longitude, latitude };\r\n    setCurrentCoords([longitude, latitude]);\r\n  };\r\n\r\n  const editAddress = ({ text , place_name}) => {\r\n    const  address  = text || place_name;\r\n    setCurrentAddress(address);\r\n  };\r\n\r\n  const changeLocCategory = e => {\r\n    const { value } = e.target;\r\n    // set the select\r\n    setSelectCategoryOption(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"locations-page\">\r\n      {isEditMode && <div></div>}\r\n      {!isEditMode && (\r\n        <div className=\"sidebar\">\r\n          {categories && categories[0] && (\r\n            <div>\r\n              filter\r\n              <Select\r\n                title=\"\"\r\n                dataList={categories}\r\n                onSelect={filterBy}\r\n                selectedOption={filteredBy}\r\n                valueKey={\"name\"}\r\n                showKey={\"name\"}\r\n                optionClass=\"capitalized\"\r\n                getSelectList={getCategories}\r\n              ></Select>\r\n            </div>\r\n          )}\r\n          <button className=\"btn\" onClick={sortBy}>\r\n            sort {isAsec ? \"  a - z\" : \"  z - a\"}\r\n          </button>\r\n          <button className=\"btn\" onClick={groupBy}>\r\n            group by category\r\n          </button>\r\n        </div>\r\n      )}\r\n      <Crud\r\n        title=\"Locations\"\r\n        cards={locs}\r\n        deleteCard={deleteLocation}\r\n        editOrAddCards={editOrAddLocation}\r\n        inputs={fieldsToView}\r\n        editInputs={fieldsToEdit}\r\n        classInput=\"mr-bottom-1rem\"\r\n        doOnSelect={doOnSelect}\r\n        showMap={true}\r\n      >\r\n        {/* children */}\r\n        <Select\r\n          title=\"category\"\r\n          isShowAllOption={false}\r\n          selectedOption={selectCategoryOption}\r\n          dataList={categories}\r\n          onSelect={changeLocCategory}\r\n          valueKey={\"name\"}\r\n          showKey={\"name\"}\r\n          optionClass=\"capitalized\"\r\n          getSelectList={getCategories}\r\n        ></Select>\r\n        {isEditMode && (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Map\r\n              coords={currentCoords}\r\n              isEditable={true}\r\n              editCoords={editCoords}\r\n              editAddressByGeocoder={editAddress}\r\n            />\r\n          </Suspense>\r\n        )}\r\n      </Crud>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../style/index.css\"\r\n\r\nexport default function ToogleBar({ handleClick, children }) {\r\n  return (\r\n    <div className=\"toggle-bar\">\r\n      <button className=\"btn\" onClick={() => handleClick(true)}> {children[0]} </button>\r\n      <button className=\"btn\"onClick={() => handleClick(false)} > {children[1]} </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport Categories from \"./views/Categories\";\nimport Locations from \"./views/Locations\";\nimport ToogleBar from \"./cmps/ToogleBar\";\n\nimport \"./style/layout.css\";\n\nfunction App() {\n  const [toggleCategories, setToggleCategories] = useState(false);\n  //true meaning show categoreis on load\n\n  const handleClick = btnClicked => {\n    if (toggleCategories === btnClicked) return;\n    const toggle = !toggleCategories;\n    setToggleCategories(toggle);\n  };\n\n  const [isCategorryChanged, setIsCategorryChanged] = useState([]);\n  const onCategoryChange = () => {\n    setIsCategorryChanged([Math.random()]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header></header>\n\n      <main>\n        {toggleCategories && <Categories onCategoryChange={onCategoryChange} />}\n        {!toggleCategories && (\n          <Locations isCategorryChanged={isCategorryChanged} />\n        )}\n      </main>\n\n      <footer>\n        <ToogleBar handleClick={handleClick}>\n          {[\"Categories\", \"Locations\"]}\n        </ToogleBar>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}